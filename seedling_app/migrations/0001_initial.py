# Generated by Django 5.2.3 on 2025-06-26 12:51

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgroEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('WATERING', 'Watering'), ('FERTILIZING', 'Fertilizing'), ('PRUNING', 'Pruning'), ('PEST_CONTROL', 'Pest Control'), ('HARVEST', 'Harvest'), ('OTHER', 'Other')], db_index=True, max_length=20)),
                ('date', models.DateField(auto_now_add=True)),
                ('comment', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Agro Event',
                'verbose_name_plural': 'Agro Events',
                'db_table': 'AgroEvent',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('fio', models.CharField(max_length=255)),
                ('passport', models.CharField(db_index=True, max_length=50, unique=True)),
                ('birthday', models.DateField()),
                ('phone', models.CharField(db_index=True, max_length=20, unique=True)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'db_table': 'Customer',
                'ordering': ['fio'],
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Tuman',
                'verbose_name_plural': 'Tumanlar',
                'db_table': 'District',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SeedlingTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StatusTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('status_for', models.CharField(choices=[('SEEDLING', 'Seedling'), ('AGRO_EVENT', 'Agro Event')], db_index=True, max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('number', models.CharField(db_index=True, max_length=50, unique=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('parent_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contracts', to='seedling_app.customer')),
            ],
            options={
                'verbose_name': 'Contract',
                'verbose_name_plural': 'Contracts',
                'db_table': 'Contract',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Household',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('street', models.CharField(max_length=100)),
                ('house', models.CharField(max_length=50)),
                ('qr_id', models.CharField(db_index=True, max_length=50, unique=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_households', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Household',
                'verbose_name_plural': 'Households',
                'db_table': 'Household',
                'ordering': ['street', 'house'],
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='parent_household',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='seedling_app.household'),
        ),
        migrations.CreateModel(
            name='Mahalla',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('parent_district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mahallalar', to='seedling_app.district')),
            ],
            options={
                'verbose_name': 'Mahalla',
                'verbose_name_plural': 'Mahallalar',
                'db_table': 'Mahalla',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='household',
            name='parent_mfy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='xonadonlar', to='seedling_app.mahalla'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='binded_mfy',
            field=models.ManyToManyField(blank=True, to='seedling_app.mahalla'),
        ),
        migrations.CreateModel(
            name='Photos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('image', models.ImageField(max_length=255, upload_to='photos/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'gif'])])),
                ('attached_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='seedling_app.agroevent')),
            ],
            options={
                'verbose_name': 'Photo',
                'verbose_name_plural': 'Photos',
                'db_table': 'Photos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='agroevent',
            name='foto',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='event_photos', to='seedling_app.photos'),
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'Viloyat',
                'verbose_name_plural': 'Viloyatlar',
                'db_table': 'Region',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='Region_name_877eb3_idx')],
            },
        ),
        migrations.AddField(
            model_name='district',
            name='parent_region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tumanlar', to='seedling_app.region'),
        ),
        migrations.CreateModel(
            name='Seedling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.CharField(help_text='GPS coordinates or location description', max_length=255)),
                ('plant_date', models.DateField(auto_now_add=True)),
                ('comment', models.TextField(blank=True)),
                ('parent_contract', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='seedlings', to='seedling_app.contract')),
                ('seedling_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='seedlings', to='seedling_app.seedlingtypes')),
                ('plant_status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='seedlings', to='seedling_app.statustypes')),
            ],
            options={
                'verbose_name': 'Seedling',
                'verbose_name_plural': 'Seedlings',
                'db_table': 'Seedling',
                'ordering': ['-plant_date'],
            },
        ),
        migrations.AddField(
            model_name='agroevent',
            name='parent_seedling',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agro_events', to='seedling_app.seedling'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['number'], name='Contract_number_296646_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['date'], name='Contract_date_bd6671_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['passport'], name='Customer_passpor_3924bf_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['phone'], name='Customer_phone_c02d81_idx'),
        ),
        migrations.AddIndex(
            model_name='mahalla',
            index=models.Index(fields=['name', 'parent_district'], name='Mahalla_name_02fb0c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='mahalla',
            unique_together={('name', 'parent_district')},
        ),
        migrations.AddIndex(
            model_name='household',
            index=models.Index(fields=['street', 'house'], name='Household_street_5838d6_idx'),
        ),
        migrations.AddIndex(
            model_name='household',
            index=models.Index(fields=['qr_id'], name='Household_qr_id_dea80f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='household',
            unique_together={('street', 'house', 'parent_mfy')},
        ),
        migrations.AddIndex(
            model_name='district',
            index=models.Index(fields=['name', 'parent_region'], name='District_name_035786_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='district',
            unique_together={('name', 'parent_region')},
        ),
        migrations.AddIndex(
            model_name='agroevent',
            index=models.Index(fields=['type'], name='AgroEvent_type_d30d83_idx'),
        ),
        migrations.AddIndex(
            model_name='agroevent',
            index=models.Index(fields=['date', 'parent_seedling'], name='AgroEvent_date_3a7d04_idx'),
        ),
        migrations.AddIndex(
            model_name='seedling',
            index=models.Index(fields=['seedling_type'], name='Seedling_seedlin_ddae16_idx'),
        ),
        migrations.AddIndex(
            model_name='seedling',
            index=models.Index(fields=['plant_status'], name='Seedling_plant_s_ef2ba9_idx'),
        ),
        migrations.AddIndex(
            model_name='seedling',
            index=models.Index(fields=['plant_date'], name='Seedling_plant_d_16675b_idx'),
        ),
    ]
